#############################################################
# @file Makefile
# @brief Config for ARM11 to build Axel.
# @author mopp
# @version 0.2
# 	Note:
# 	Please pay attention to compiler.
# 	`arm-linux-gnueabihf` toolchain is for Linux applications and libraries.
# 	`arm-none-eabi` toolchain is for bare metal software.
# 	So, Axel is bare metal software.
# 	Please see below link.
# 	https://bugs.launchpad.net/linaro-toolchain-binaries/+bug/1181159
#
# 	`hf` means hardware float.
# 	In Axel, we have supposed ARM11 is raspberry pi, and it has hardware float feature.
# 	However, the name of gcc (arm-none-eabi-gcc) does NOT contain `hf`.
# 	But, setting is hardware float.
# 	Please pay attention this things.
#############################################################


# Target triple consists of 4 parts (Last part is option).
# architecture-vendor-os-env_type
# Please see below links for more details.
# https://github.com/rust-lang/rfcs/blob/master/text/0131-target-specification.md
# https://github.com/rust-lang/rust/blob/master/src/librustc_back/target/mod.rs
TARGET_TRIPLE := arm-unknown-none-eabihf
RUSTC_CFG     := --cfg RPi_zero

# We use gcc as linker to generate Axel binary because of libgcc.
# So we build rustc using gcc in development.
# gcc options
# 	--build-id=none is very important in order to do multiboot.
# 	The reason is described in this link http://stackoverflow.com/questions/27744126/grub-multiboot-header-not-found
# 	Briefly, this option suppresses creating a note section.
# 	If this section exists, grub2 cannot find multiboot header because multiboot header is located after 8KB.
# Also, Please pay attention the order of command line arguments.
LD       := arm-none-eabi-gcc
LD_FLAGS := -g -O2 -Wl,--build-id=none -Wl,--gc-sections -ffreestanding -fno-builtin -nostdlib -nostartfiles -static -mfpu=vfp -mfloat-abi=hard -march=armv6zk -mtune=arm1176jzf-s

# All libs are required during opt-level=0.
LIBS     := -lm -lc -lgcc

QEMU       := ~/.local/bin/qemu-system-arm
QEMU_FLAGS := -monitor stdio -vga std -m 256 -M raspi -cpu arm1176

export AS       := arm-none-eabi-as
export AS_FLAGS := -g -mfpu=vfp -mfloat-abi=hard -march=armv6zk

OBJCOPY := arm-none-eabi-objcopy
